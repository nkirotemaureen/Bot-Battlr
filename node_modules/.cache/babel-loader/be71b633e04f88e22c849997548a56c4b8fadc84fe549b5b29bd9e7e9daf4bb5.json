{"ast":null,"code":"var _jsxFileName = \"/Users/maureen/Desktop/Development/Bott Battlr/src/components/BotsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport BotCollection from \"./BotCollection\";\nimport BotSpecs from \"./BotSpecs\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport SortBar from \"./SortBar\";\nimport FilterBar from \"./FilterBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotsPage() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [selectedBots, setSelectedBots] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [sortCriteria, setSortCriteria] = useState(null);\n  const [filters, setFilters] = useState([]);\n  useEffect(() => {\n    // Fetch data from backend after loading\n    fetch(\"http://localhost:8002/bots\").then(response => response.json()).then(data => {\n      setBots(data);\n      console.log(\"fetched\");\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  const handleShowDetails = bot => {\n    setSelectedCard(bot);\n  };\n  const handleGoBack = () => {\n    setSelectedCard(null);\n  };\n  const handleBotSelect = bot => {\n    if (!selectedBots.some(selectedBot => selectedBot.id === bot.id)) {\n      setSelectedBots([...selectedBots, bot]);\n      setBots(bots.filter(b => b.id !== bot.id)); // Remove bot from BotCollection\n    }\n  };\n  const handleBotDeselect = bot => {\n    setSelectedBots(selectedBots.filter(selectedBot => selectedBot.id !== bot.id));\n    setBots([bot, ...bots]); // Add bot back to BotCollection\n  };\n  const handleDelete = id => {\n    fetch(`http://localhost:8002/bots/${id}`, {\n      method: \"DELETE\"\n    }).then(response => {\n      if (response.ok) {\n        setSelectedBots(selectedBots.filter(selectedBot => selectedBot.id !== id));\n        setBots(bots.filter(bot => bot.id !== id));\n        setSelectedCard(null);\n      } else {\n        console.error(\"Failed to delete bot\");\n      }\n    }).catch(error => {\n      console.error(\"Error deleting bot:\", error);\n    });\n  };\n  const handleSort = criteria => {\n    setSortCriteria(criteria);\n  };\n  const handleFilter = selectedFilters => {\n    setFilters(selectedFilters);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      selectedBots: selectedBots,\n      onBotDeselect: handleBotDeselect,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n      botClasses: [\"Assault\", \"Defender\", \"Support\", \"Medic\", \"Witch\", \"Captain\"],\n      onFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SortBar, {\n      onSort: handleSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), selectedCard ? /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectedCard,\n      onGoBack: handleGoBack,\n      onEnlist: handleBotSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      onShowDetails: handleShowDetails,\n      onDelete: handleDelete,\n      sortCriteria: sortCriteria,\n      filters: filters,\n      onEnlist: handleBotSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(BotsPage, \"NjzlxfcJIFQOpDELWHZs2buwP5k=\");\n_c = BotsPage;\nexport default BotsPage;\nvar _c;\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"names":["React","useState","useEffect","BotCollection","BotSpecs","YourBotArmy","SortBar","FilterBar","jsxDEV","_jsxDEV","BotsPage","_s","bots","setBots","selectedBots","setSelectedBots","selectedCard","setSelectedCard","sortCriteria","setSortCriteria","filters","setFilters","fetch","then","response","json","data","console","log","catch","error","handleShowDetails","bot","handleGoBack","handleBotSelect","some","selectedBot","id","filter","b","handleBotDeselect","handleDelete","method","ok","handleSort","criteria","handleFilter","selectedFilters","children","onBotDeselect","onDelete","fileName","_jsxFileName","lineNumber","columnNumber","botClasses","onFilter","onSort","onGoBack","onEnlist","onShowDetails","_c","$RefreshReg$"],"sources":["/Users/maureen/Desktop/Development/Bott Battlr/src/components/BotsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BotCollection from \"./BotCollection\";\nimport BotSpecs from \"./BotSpecs\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport SortBar from \"./SortBar\";\nimport FilterBar from \"./FilterBar\";\n\nfunction BotsPage() {\n  const [bots, setBots] = useState([]);\n  const [selectedBots, setSelectedBots] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [sortCriteria, setSortCriteria] = useState(null);\n  const [filters, setFilters] = useState([]);\n\n  useEffect(() => {\n    // Fetch data from backend after loading\n    fetch(\"http://localhost:8002/bots\")\n      .then((response) => response.json())\n      .then((data) => {\n        setBots(data);\n        console.log(\"fetched\");\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n\n  const handleShowDetails = (bot) => {\n    setSelectedCard(bot);\n  };\n\n  const handleGoBack = () => {\n    setSelectedCard(null);\n  };\n\n  const handleBotSelect = (bot) => {\n    if (!selectedBots.some((selectedBot) => selectedBot.id === bot.id)) {\n      setSelectedBots([...selectedBots, bot]);\n      setBots(bots.filter((b) => b.id !== bot.id)); // Remove bot from BotCollection\n    }\n  };\n\n  const handleBotDeselect = (bot) => {\n    setSelectedBots(selectedBots.filter((selectedBot) => selectedBot.id !== bot.id));\n    setBots([bot, ...bots]); // Add bot back to BotCollection\n  };\n\n     const handleDelete = (id) => {\n        fetch(`http://localhost:8002/bots/${id}`, {\n          method: \"DELETE\",\n        })\n          .then((response) => {\n            if (response.ok) {\n              setSelectedBots(selectedBots.filter((selectedBot) => selectedBot.id !== id));\n              setBots(bots.filter((bot) => bot.id !== id));\n              setSelectedCard(null);\n            } else {\n              console.error(\"Failed to delete bot\");\n            }\n          })\n          .catch((error) => {\n            console.error(\"Error deleting bot:\", error);\n          });\n      };\n\n  const handleSort = (criteria) => {\n    setSortCriteria(criteria);\n  };\n\n  const handleFilter = (selectedFilters) => {\n    setFilters(selectedFilters);\n  };\n\n  return (\n    <div>\n      <YourBotArmy selectedBots={selectedBots} onBotDeselect={handleBotDeselect} onDelete={handleDelete} />\n      <FilterBar botClasses={[\"Assault\", \"Defender\", \"Support\", \"Medic\", \"Witch\", \"Captain\"]} onFilter={handleFilter} />\n      <SortBar onSort={handleSort} />\n      {selectedCard ? (\n        <BotSpecs bot={selectedCard} onGoBack={handleGoBack} onEnlist={handleBotSelect} />\n      ) : (\n        <BotCollection bots={bots} onShowDetails={handleShowDetails} onDelete={handleDelete} sortCriteria={sortCriteria} filters={filters} onEnlist={handleBotSelect} />\n      )}\n    </div>\n  );\n}\n\nexport default BotsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}